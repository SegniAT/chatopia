// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.894
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func About(title string) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
			templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
			if !templ_7745c5c3_IsBuffer {
				defer func() {
					templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
					if templ_7745c5c3_Err == nil {
						templ_7745c5c3_Err = templ_7745c5c3_BufErr
					}
				}()
			}
			ctx = templ.InitializeContext(ctx)
			templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<section class=\"py-4\"><div class=\"sm:text-lg space-y-8 text-chatopia-5/90 max-w-4xl mx-auto mt-8\"><p class=\"leading-relaxed\">Welcome to <strong>Chatopia</strong>, an experiment in spontaneous, anonymous human connection. We wanted to create a simple, fast, and private space for one-on-one conversations with strangers from around the globe. No accounts, no history, no distractionsâ€”just pure, unadulterated chat.</p><div class=\"border-t border-chatopia-3/50 pt-8\"><h2 class=\"text-lg sm:text-2xl font-bold text-chatopia-5 mb-4\">Our Philosophy</h2><p>We believe in the power of conversation. In a world of curated profiles and follower counts, we wanted to get back to basics. This is a place for authentic interaction, where the only thing that matters is the connection you make with the person on the other side of the screen. Our goal is to provide a clean, modern, and reliable platform for these encounters.</p></div><div class=\"border-t border-chatopia-3/50 pt-8\"><h2 class=\"text-lg sm:text-2xl font-bold text-chatopia-5 mb-4\">How it Works</h2><p class=\"mb-4\">Finding a great conversation is easy and customizable. Before you start, you can set your preferences to chat your way:</p><ul class=\"list-disc list-inside space-y-3\"><li><strong>Choose Your Chat Mode:</strong> You decide how you want to interact. Select 'Text Only' for a classic chatroom experience, or choose 'Video' to enable your camera and microphone for a face-to-face conversation, which also includes text chat.</li><li><strong>Add Interests for Better Matches:</strong> Want to connect with someone who shares your passions? You can add up to three interests. Our system will then try to match you with another user who has at least one of those interests in common.</li><li><strong>Control the Matching Logic:</strong> You can choose between 'Strict' and 'Flexible' matching for your interests. 'Strict' mode will only connect you with someone who shares an interest, which may lead to better conversations but could take longer. 'Flexible' mode will prioritize finding you a chat partner quickly, even if they don't share your listed interests.</li></ul><p class=\"mt-4\">Once you hit 'Start', we find a partner based on your preferences. The connection is private and direct between your browsers. If you'd like to talk to someone else, you can end the chat at any time and start a new one instantly.</p></div><div class=\"border-t border-chatopia-3/50 pt-8 text-center\"><p class=\"\">Ready to connect? Head back to the homepage and start a new chat!</p></div></div></section>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			return nil
		})
		templ_7745c5c3_Err = Base(title).Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
