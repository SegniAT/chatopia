<script>\n\t\tlet isConnectedMessage=(message)=>{\n\t\t\tmessage = message.toLowerCase()\n\t\t\treturn message.includes(\"connection_status\") && message.includes(\"connected\")\n\t\t}\n\n\t\tlet isDisconnectedMessage=(message)=>{\n\t\t\tmessage = message.toLowerCase()\n\t\t\treturn message.includes(\"connection_status\") && message.includes(\"disconnected\")\n\t\t}\n\n\t\tlet isPeerIdCallerMessage = (message)=>{\n\t\t\tmessage=message.toLowerCase(message)\n\t\t\treturn message.includes(\"peer_id_caller\")\n\t\t}\n\n\t\tlet isPeerIdPartnerMessage = (message)=>{\n\t\t\tmessage=message.toLowerCase(message)\n\t\t\treturn message.includes(\"peer_id_partner\")\n\t\t}\n\n\t\tlet isCaller = (message)=>{\n\t\t\treturn isPeerIdPartnerMessage(message)\n\t\t}\n\n\t\tlet addVideoStream = (videoElement, stream) => {\n\t\t\tvideoElement.srcObject = stream\n\t\t\tvideoElement.addEventListener('loadedmetadata', () => {\n\t\t\t\tvideoElement.play()\n\t\t\t})\n\t\t}\n\n\n\t\tdocument.addEventListener(\"DOMContentLoaded\",(e)=> {\n\t\t\tlet localVideo= document.querySelector(\"#local_video\")\n\t\t\tlet remoteVideo= document.querySelector(\"#remote_video\")\n\n\t\t\tconst PEERJS_SERVER=\"/\"\n\t\t\tconst PEERJS_PORT=9000\n\n\t\t\tconst peer = null\n\n\n\t\t\tdocument.body.addEventListener(\"htmx:wsOpen\", (event) => {\n\t\t\t\tlet socketWrapper = event.detail.socketWrapper\n\t\t\t\tlet peer = null\n\t\t\t\t\n\t\t\t\tdocument.body.addEventListener(\"htmx:wsAfterMessage\", (event) => {\n\t\t\t\t\tlet message = event.detail.message\n\n\t\t\t\t\t// PEER ID accepted\n\t\t\t\t\tif (isPeerIdCallerMessage(message) || isPeerIdPartnerMessage(message)){\n\t\t\t\t\t\t// get the ID\n\t\t\t\t\t\tlet parsedMessage = JSON.parse(message)\n\t\t\t\t\t\tlet parsedChatMessage = JSON.parse(parsedMessage[\"chat_message\"])\n\n\t\t\t\t\t\tconst ID = parsedChatMessage['id'] \n\t\t\t\t\t\tpeer = new Peer(ID, {\n\t\t\t\t\t\t\thost:PEERJS_SERVER,\n\t\t\t\t\t\t\tport:PEERJS_PORT\n\t\t\t\t\t\t})\n\n\t\t\t\t\t\t// make call if you're the caller\n\t\t\t\t\t\t// else listen for calls\n\n\t\t\t\t\t\tif (localVideo){\n\t\t\t\t\t\t\tnavigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\t\t\tvideo:true,\n\t\t\t\t\t\t\t\taudio:true\n\t\t\t\t\t\t\t}).then(stream => {\n\t\t\t\t\t\t\t\taddVideoStream(localVideo, stream)\n\n\t\t\t\t\t\t\t\tif (isCaller(message)) {\n\t\t\t\t\t\t\t\t\tconst partnerPeerId = parsedChatMessage['partner_id']\n\t\t\t\t\t\t\t\t\tconst call = peer.call(partnerPeerId, stream)\n\t\t\t\t\t\t\t\t\tcall.on('stream', partnerStream => {\n\t\t\t\t\t\t\t\t\t\tif (remoteVideo) {\n\t\t\t\t\t\t\t\t\t\t\taddVideoStream(remoteVideo, partnerStream)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tcall.on('close', ()=> {\n\t\t\t\t\t\t\t\t\t\tif (remoteVideo) {\n\t\t\t\t\t\t\t\t\t\t\tremoteVideo.srcObject = null \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}else {\n\t\t\t\t\t\t\t\t\tconst callerPeerId= parsedChatMessage['caller_id']\n\t\t\t\t\t\t\t\t\tpeer.on('call', call => {\n\t\t\t\t\t\t\t\t\t\tcall.answer(stream)\n\n\t\t\t\t\t\t\t\t\t\tcall.on('stream', callerStream => {\n\t\t\t\t\t\t\t\t\t\t\tif (remoteVideo) {\n\t\t\t\t\t\t\t\t\t\t\t\taddVideoStream(remoteVideo, callerStream)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\t\n\n\t\t\t\t\tif (isDisconnectedMessage(message) && peer) {\n\t\t\t\t\t\tpeer.close()\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t});\n\t\t\t\n\t\t\tdocument.body.addEventListener(\"htmx:wsClose\", (event) => {\n\t\t\t});\n\t\t})\n\t</script><div class=\"flex flex-col gap-2\"><div><video id=\"remote_video\" class=\"h-80 w-80 border-2 rounded-md border-chatopia-3\" autoplay muted></video></div><div><video id=\"local_video\" class=\"h-80 w-80 border-2 rounded-md border-chatopia-3\" autoplay muted></video></div></div>
