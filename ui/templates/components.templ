package templates

import "fmt"

templ ConnectionStatusReady() {
	<div id="connection_status" hx-swap-oob="true">
		<p class="">Ready to connect</p>
	</div>
}

templ ConnectionStatusSearching() {
	<div id="connection_status" hx-swap-oob="true">
		<p class="">🔎 Searching ...</p>
	</div>
}

templ ConnectionStatusConnected() {
	<div id="connection_status" hx-swap-oob="true">
		<p class="text-green-500">Connected with stranger 🤝</p>
	</div>
}

templ ConnectionStatusDisconnected() {
	<div id="connection_status" hx-swap-oob="true">
		<p class="text-red-500">Stranger disconnected 🏃</p>
	</div>
}

templ ConnectionStatusNoClientsFound() {
	<div id="connection_status" hx-swap-oob="true">
		<p class="text-red-500">Can't find a stranger 😢</p>
	</div>
}

templ StrangerTyping() {
	<div
		id="chat_typing"
		hx-swap-oob="true"
		hx-on:htmx:load="clearTimeout(window.typingTimer); window.typingTimer = window.setTimeout(function() { htmx.find('#chat_typing').innerHTML = ''}, 3000)"
		class="flex items-center gap-1 py-1"
	>
		<p class="text-red-500">
			Stranger:
		</p>
		<img src="/assets/typing.gif" height="60"/>
	</div>
}

templ ActionButton_NewChat() {
	<div id="action_button_container">
		<button
			id="action_button"
			class="border bg-chatopia-1 border-chatopia-3 text-chatopia-2 p-2 font-semibold"
			type="button"
			ws-send
			hx-vals='{"message_type":"new_connection"}'
			hx-trigger="click"
		>
			New Chat
		</button>
	</div>
}

templ ActionButton_Searching() {
	<div id="action_button_container">
		<button
			id="action_button"
			class="flex gap-1 border border-chatopia-1 p-2 bg-chatopia-4"
			disabled
			type="button"
		>
			<svg class="text-chatopia-1" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
				<style>.spinner_DupU{animation:spinner_sM3D 1.2s infinite}.spinner_GWtZ{animation-delay:.1s}.spinner_dwN6{animation-delay:.2s}.spinner_46QP{animation-delay:.3s}.spinner_PD82{animation-delay:.4s}.spinner_eUgh{animation-delay:.5s}.spinner_eUaP{animation-delay:.6s}.spinner_j38H{animation-delay:.7s}.spinner_tVmX{animation-delay:.8s}.spinner_DQhX{animation-delay:.9s}.spinner_GIL4{animation-delay:1s}.spinner_n0Yb{animation-delay:1.1s}@keyframes spinner_sM3D{0%,50%{animation-timing-function:cubic-bezier(0,1,0,1);r:0}10%{animation-timing-function:cubic-bezier(.53,0,.61,.73);r:2px}}</style>
				<circle class="spinner_DupU" cx="12" cy="3" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_GWtZ" cx="16.50" cy="4.21" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_n0Yb" cx="7.50" cy="4.21" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_dwN6" cx="19.79" cy="7.50" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_GIL4" cx="4.21" cy="7.50" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_46QP" cx="21.00" cy="12.00" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_DQhX" cx="3.00" cy="12.00" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_PD82" cx="19.79" cy="16.50" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_tVmX" cx="4.21" cy="16.50" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_eUgh" cx="16.50" cy="19.79" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_j38H" cx="7.50" cy="19.79" r="0" fill="currentColor"></circle>
				<circle class="spinner_DupU spinner_eUaP" cx="12" cy="21" r="0" fill="currentColor"></circle>
			</svg>
			<span>Searching...</span>
		</button>
	</div>
}

templ InterestPill(interest string) {
	<div class="flex justify-center items-center px-2 h-6 bg-chatopia-2 border-l border-chatopia-3 shadow-sm shadow-chatopia-3 rounded-md">
		{ interest }
	</div>
}

templ LiveUsers(users int) {
	<div
		id="live_users"
		class="relative flex items-center gap-1 text-2xl bg-chatopia-3 px-2 py-1 rounded-sm"
		hx-get="/live_users"
		hx-trigger="every 10s"
		hx-swap-oob="true"
	>
		<!-- Dot positioned inside top-left of the div -->
		<span class="absolute top-0 left-0 mt-1 ml-1 flex h-3 w-3">
			<span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75"></span>
			<span class="relative inline-flex rounded-full h-3 w-3 bg-red-500"></span>
		</span>
		<!-- User count and "live" text -->
		<div class="flex items-center gap-1 ml-3">
			<span class="text-lg font-semibold">{ fmt.Sprintf("%d", users) }</span>
		</div>
		<span class="text-sm text-chatopia-1">live</span>
	</div>
}
